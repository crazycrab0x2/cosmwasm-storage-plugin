version: 2.1

orbs:
  codecov: codecov/codecov@3.2.2

workflows:
  version: 2
  test:
    jobs:
      - build_and_test
      - build_minimal
      - build_maximal
      - lint
      - benchmarking:
          requires:
            - build_and_test
          filters:
            branches:
              only:
                # Long living branches
                - main
                # ðŸ‘‡Add your branch here if benchmarking matters to your work
      - coverage

jobs:
  build_and_test:
    docker:
      - image: rust:1.64.0
    working_directory: ~/project/
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-storage-plus:1.64.0-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Build library for native target (no iterator)
          command: cargo build --locked --no-default-features
      - run:
          name: Run unit tests (no iterator)
          command: cargo test --workspace --locked --no-default-features
      - run:
          name: Build library for native target (with iterator and macro)
          command: cargo build --locked --all-features
      - run:
          name: Run unit tests (with iterator and macro)
          command: cargo test --workspace --locked --all-features
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-storage-plus:1.64.0-{{ checksum "~/project/Cargo.lock" }}

  build_minimal:
    docker:
      - image: rust:1.64.0
    working_directory: ~/project/
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - run:
          name: Remove Cargo.lock
          command: rm Cargo.lock
      - restore_cache:
          keys:
            - cargocache-v2-storage-plus:1.64.0-minimal-{{ checksum "~/project/Cargo.toml" }}
      - run:
          name: Build library for native target (with iterator and macro)
          command: cargo build -Zminimal-versions --all-features
      - run:
          name: Run unit tests (with iterator and macro)
          command: cargo test --workspace -Zminimal-versions --all-features
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-storage-plus:1.64.0-minimal-{{ checksum "~/project/Cargo.toml" }}

  build_maximal:
    docker:
      - image: rust:1.64.0
    working_directory: ~/project/
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - run:
          name: Update Cargo.lock
          command: cargo update
      - restore_cache:
          keys:
            - cargocache-v2-storage-plus:1.64.0-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Build library for native target (with iterator and macro)
          command: cargo build --locked --all-features
      - run:
          name: Run unit tests (with iterator and macro)
          command: cargo test --workspace --locked --all-features
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-storage-plus:1.64.0-{{ checksum "~/project/Cargo.lock" }}

  lint:
    docker:
      - image: rust:1.64.0
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-lint-rust:1.64.0-{{ checksum "Cargo.lock" }}
      - run:
          name: Add rustfmt component
          command: rustup component add rustfmt
      - run:
          name: Add clippy component
          command: rustup component add clippy
      - run:
          name: Check formatting of workspace
          command: cargo fmt -- --check
      - run:
          name: Clippy linting on workspace
          command: cargo clippy --all-targets -- -D warnings
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cargocache-v2-lint-rust:1.64.0-{{ checksum "Cargo.lock" }}

  benchmarking:
    docker:
      - image: rust:1.64.0
    environment:
      RUST_BACKTRACE: 1
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information (default; stable)
          command: rustc --version && cargo --version
      - restore_cache:
          keys:
            - cargocache-v2-benchmarking-rust:1.64.0-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Run storage-plus benchmarks
          working_directory: ~/project
          command: cargo bench -- --color never --save-baseline
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-benchmarking-rust:1.64.0-{{ checksum "~/project/Cargo.lock" }}

  coverage:
    # https://circleci.com/developer/images?imageType=machine
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - checkout
      - run:
          name: Run tests with coverage
          command: |
            mkdir -p cov
            docker run --security-opt seccomp=unconfined -v "${PWD}:/volume" xd009642/tarpaulin \
              sh -c "cargo tarpaulin --workspace --skip-clean --frozen --out Xml --output-dir cov"
      - codecov/upload:
          file: cov/cobertura.xml
